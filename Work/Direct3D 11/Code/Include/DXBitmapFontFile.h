#pragma once


namespace DXFramework
{ // DXFramework namespace begin

#define DX_BITMAPFONTFILE_BLOCK_TYPE_INFO		1
#define DX_BITMAPFONTFILE_BLOCK_TYPE_COMMON		2
#define DX_BITMAPFONTFILE_BLOCK_TYPE_PAGES		3
#define DX_BITMAPFONTFILE_BLOCK_TYPE_CHARS		4
#define DX_BITMAPFONTFILE_HEADER				( (3 << 24) | (70 << 16) | (77 << 8) | 66 )

	struct DXBitmapFontGlyphData
	{
		// The texture rect.
		DXRect	rectTex;
		// The fractional increase in the current text position x-coord that should be added
		// to the glyph pos.
		float	fOffsetX;
		// The fractional increase in the current text position y-coord that should be added
		// to the glyph pos.
		float	fOffsetY;
		// The fractional increase in the current tex position after drawing the current glyph.
		float	fAdvanceX;
	};


	// This bitmap font file uses the binary font file generated by Bitmap Font Generator v3.0.
	class CDXBitmapFontFile
	{
		struct Info
		{
			INT16		fontSize;
			INT8		bitField;
			UINT8		charSet;
			UINT16		stretchH;
			UINT8		aa;
			UINT8		paddingUp;
			UINT8		paddingRight;
			UINT8		paddingDown;
			UINT8		paddingLeft;
			UINT8		spacingHoriz;
			UINT8		spacingVert;
			UINT8		outline;
			char*		fontName;
		};


		struct Common
		{
			UINT16		lineHeight;
			UINT16		base;
			UINT16		scaleW;
			UINT16		scaleH;
			UINT16		pages;
			UINT8		bitField;
			UINT8		alphaChannel;
			UINT8		redChannel;
			UINT8		greenChannel;
			UINT8		blueChannel;
		};

		struct Pages
		{
			char*		pagesNames;
		};


		struct Char
		{
			UINT32		id;
			UINT16		x;
			UINT16		y;
			UINT16		width;
			UINT16		height;
			INT16		xOffset;
			INT16		yOffset;
			INT16		xAdvance;
			UINT8		page;
			UINT8		channel;
		};

	private:
		// Only the ASCII char set is supported. The first element corresponds to the 
		// ascii code 32.
		DXBitmapFontGlyphData*	m_pGlyphData;
		UINT					m_uiNumChars;
		float					m_fReciprocalFontSize;
		float					m_fReciprocalTexWidth;
		float					m_fReciprocalTexHeight;

		
	public:
		const DXBitmapFontGlyphData*		GetGlyphData()	const	{ return m_pGlyphData; };

	public:
		// See the documentation of Bitmap Font Generator to learn about the format of the
		// file.
		HRESULT		LoadFont(WCHAR* szFileName);

	public:
		CDXBitmapFontFile();
		~CDXBitmapFontFile();
	};

} // DXFramework namespace end